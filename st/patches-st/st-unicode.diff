diff --git a/config.def.h b/config.def.h
index 877afab..a61cb2b 100644
--- a/config.def.h
+++ b/config.def.h
@@ -178,6 +178,7 @@ Shortcut shortcuts[] = {
 	{ TERMMOD,              XK_Y,           selpaste,       {.i =  0} },
 	{ TERMMOD,              XK_Num_Lock,    numlock,        {.i =  0} },
 	{ TERMMOD,              XK_I,           iso14755,       {.i =  0} },
+    { TERMMOD,              XK_U,           toggleunimode,  {.i =  0} },
 };
 
 /*
diff --git a/st.c b/st.c
index 7c7ddff..a7abfa8 100644
--- a/st.c
+++ b/st.c
@@ -138,6 +138,7 @@ static void printscreen(const Arg *) ;
 static void iso14755(const Arg *);
 static void toggleprinter(const Arg *);
 static void sendbreak(const Arg *);
+static void toggleunimode(const Arg *);
 
 /* config.h for applying patches and the configuration. */
 #include "config.h"
@@ -232,6 +233,12 @@ static uchar utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};
 static Rune utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};
 static Rune utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};
 
+/* unicode */
+
+int unicodemode = 0;
+unsigned int unibufindex = 0;
+char unibuf[5] = {0, 0, 0, 0, '\0'};
+
 /* config.h array lengths */
 size_t colornamelen = LEN(colorname);
 size_t mshortcutslen = LEN(mshortcuts);
@@ -911,6 +918,22 @@ write_error:
 	die("write error on tty: %s\n", strerror(errno));
 }
 
+int
+is_unichr(Rune c)
+{
+    int index;
+
+    if (unibufindex == 4)
+        return 0;
+
+    if ((48 & 0xFF) <= c && c <= (57 & 0xFF) ||
+        (65 & 0xFF) <= c && c <= (70 & 0xFF) ||
+        (97 & 0xFF) <= c && c <= (102 & 0xFF))
+        return 1;
+
+    return 0;
+}
+
 void
 ttysend(char *s, size_t n)
 {
@@ -918,6 +941,39 @@ ttysend(char *s, size_t n)
 	char *t, *lim;
 	Rune u;
 
+    if (unicodemode == 1) {
+        lim = &s[n];
+
+        for (t = s; t < lim; t += len) {
+            if (IS_SET(MODE_UTF8) && !IS_SET(MODE_SIXEL)) {
+                len = utf8decode(t, &u, n);
+            } else {
+                u = *t & 0xFF;
+                len = 1;
+            }
+
+            if (len <= 0)
+                break;
+
+            if (u == (27 & 0xFF)) {
+                toggleunimode(NULL);
+                return;
+            } else if (u == (13 & 0xFF)) {
+                toggleunimode(NULL);
+                return;
+            }
+
+            if (is_unichr(u) == 1) {
+                unibuf[unibufindex] = u;
+                unibufindex++;
+            }
+            
+            n -= len;
+        }
+
+        return;
+    }
+
 	ttywrite(s, n);
 	if (!IS_SET(MODE_ECHO))
 		return;
@@ -2610,6 +2666,34 @@ zoomreset(const Arg *arg)
 	}
 }
 
+void
+toggleunimode(const Arg *a)
+{
+    int index, len;
+    Rune c;
+    char *ptr;
+
+    if (unicodemode == 0) {
+        unicodemode = 1;
+        tputc('u');
+    } else {
+        unicodemode = 0;
+
+        if (unibufindex > 0) {
+            tputc(8);
+            int chr = (int)strtol(unibuf, NULL, 16);
+            size_t len = utf8encode(chr, &ptr);
+            ttysend(&ptr, len);
+        } else {
+            tputc(8);
+        }
+
+        unibufindex = 0;
+
+        unibuf[0] = unibuf[1] = unibuf[2] = unibuf[3] = 0;
+    }
+}
+
 void
 resettitle(void)
 {
diff --git a/st.h b/st.h
index 44d4938..6f4b4e0 100644
--- a/st.h
+++ b/st.h
@@ -195,6 +195,8 @@ void ttyresize(void);
 void ttysend(char *, size_t);
 void ttywrite(const char *, size_t);
 
+int is_unichr(Rune c);
+
 void resettitle(void);
 
 char *kmap(KeySym, uint);
